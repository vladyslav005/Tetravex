package tetravex.consoleui;

public enum Key {
    NULL(0),
    START_OF_HEADING(1),
    START_OF_TEXT(2),
    END_OF_TEXT(3),
    END_OF_TRANSMISSION(4),
    ENQUIRY(5),
    ACKNOWLEDGE(6),
    BELL(7),
    BACKSPACE(8),
    HORIZONTAL_TAB(9),
    LINE_FEED(10),
    VERTICAL_TAB(11),
    FORM_FEED(12),
    CARRIAGE_RETURN(13),
    SHIFT_OUT(14),
    SHIFT_IN(15),
    DATA_LINK_ESCAPE(16),
    DEVICE_CONTROL_ONE(17),
    DEVICE_CONTROL_TWO(18),
    DEVICE_CONTROL_THREE(19),
    DEVICE_CONTROL_FOUR(20),
    NEGATIVE_ACKNOWLEDGE(21),
    SYNCHRONOUS_IDLE(22),
    END_OF_TRANSMISSION_BLOCK(23),
    CANCEL(24),
    END_OF_MEDIUM(25),
    SUBSTITUTE(26),
    ESCAPE(27),
    FILE_SEPARATOR(28),
    GROUP_SEPARATOR(29),
    RECORD_SEPARATOR(30),
    UNIT_SEPARATOR(31),
    SPACE(32),
    EXCLAMATION_MARK(33),
    DOUBLE_QUOTE(34),
    HASH(35),
    DOLLAR(36),
    PERCENT(37),
    AMPERSAND(38),
    SINGLE_QUOTE(39),
    OPEN_PARENTHESIS(40),
    CLOSE_PARENTHESIS(41),
    ASTERISK(42),
    PLUS(43),
    COMMA(44),
    MINUS(45),
    PERIOD(46),
    SLASH(47),
    DIGIT_ZERO(48),
    DIGIT_ONE(49),
    DIGIT_TWO(50),
    DIGIT_THREE(51),
    DIGIT_FOUR(52),
    DIGIT_FIVE(53),
    DIGIT_SIX(54),
    DIGIT_SEVEN(55),
    DIGIT_EIGHT(56),
    DIGIT_NINE(57),
    COLON(58),
    SEMICOLON(59),
    LESS_THAN(60),
    EQUALS(61),
    GREATER_THAN(62),
    QUESTION_MARK(63),
    AT(64),
    UPPERCASE_A(65),
    UPPERCASE_B(66),
    UPPERCASE_C(67),
    UPPERCASE_D(68),
    UPPERCASE_E(69),
    UPPERCASE_F(70),
    UPPERCASE_G(71),
    UPPERCASE_H(72),
    UPPERCASE_I(73),
    UPPERCASE_J(74),
    UPPERCASE_K(75),
    UPPERCASE_L(76),
    UPPERCASE_M(77),
    UPPERCASE_N(78),
    UPPERCASE_O(79),
    UPPERCASE_P(80),
    UPPERCASE_Q(81),
    UPPERCASE_R(82),
    UPPERCASE_S(83),
    UPPERCASE_T(84),
    UPPERCASE_U(85),
    UPPERCASE_V(86),
    UPPERCASE_W(87),
    UPPERCASE_X(88),
    UPPERCASE_Y(89),
    UPPERCASE_Z(90),
    OPEN_BRACKET(91),
    BACKSLASH(92),
    CLOSE_BRACKET(93),
    CARET(94),
    UNDERSCORE(95),
    BACKTICK(96),
    LOWERCASE_A(97),
    LOWERCASE_B(98),
    LOWERCASE_C(99),
    LOWERCASE_D(100),
    LOWERCASE_E(101),
    LOWERCASE_F(102),
    LOWERCASE_G(103),
    LOWERCASE_H(104),
    LOWERCASE_I(105),
    LOWERCASE_J(106),
    LOWERCASE_K(107),
    LOWERCASE_L(108),
    LOWERCASE_M(109),
    LOWERCASE_N(110),
    LOWERCASE_O(111),
    LOWERCASE_P(112),
    LOWERCASE_Q(113),
    LOWERCASE_R(114),
    LOWERCASE_S(115),
    LOWERCASE_T(116),
    LOWERCASE_U(117),
    LOWERCASE_V(118),
    LOWERCASE_W(119),
    LOWERCASE_X(120),
    LOWERCASE_Y(121),
    LOWERCASE_Z(122),
    OPEN_BRACE(123),
    VERTICAL_BAR(124),
    CLOSE_BRACE(125),
    TILDE(126),
    DELETE(127);

    private final int keyCode;


    Key(int keyCode) {
        this.keyCode = keyCode;
    }

    public static Key getASCIIKeyCode(int code) {
        for (Key key : Key.values()) {
            if (key.getCode() == code) {
                return key;
            }
        }

        return null; // Handle unknown key codes
    }

    public int getCode() {
        return keyCode;
    }
}
